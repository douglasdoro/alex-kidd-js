function setup(){createCanvas(config.canvas.width,config.canvas.height),frameRate(config.frameRate),game=new Game,game.setup()}function keyPressed(){game.keyPressed(key)}function keyReleased(){game.keyReleased(key)}function draw(){background("#09adff"),game.draw()}
let game,config,walkingImage,birdImage,ghostImage,deadImage,jumpImage,crouchedImage,jumpSound,gameOverSound,stageOneImage,singleTreeImage,cloudImage,mainThemeSound;function preload(){config=loadJSON("config/config.json",fillConfigAfterLoad)}function fillConfigAfterLoad(e){walkingImage=loadImage(config.character.walking.imagePath),jumpImage=loadImage(config.character.jumping.imagePath),birdImage=loadImage(config.enemies.monsterBird.imagePath),ghostImage=loadImage(config.enemies.ghost.imagePath),deadImage=loadImage(config.character.dead.imagePath),crouchedImage=loadImage(config.character.crouched.imagePath),stageOneImage=loadImage(config.stage.one.scenario.ground.imagePath),singleTreeImage=loadImage(config.stage.one.scenario.elements.tree.imagePath),cloudImage=loadImage(config.stage.one.scenario.elements.cloud.imagePath),jumpSound=loadSound(config.character.soundPathJump),gameOverSound=loadSound(config.character.soundPathGameOver),mainThemeSound=loadSound(config.mainThemeSoundPath)}
class Animation{constructor(i,t,s,e){this.image=i,this.x=0,this.y=0,this.xMovementSpeed,this.width=t,this.height=s,this.spriteMap=e,this.frame=0,this.animationSpeed=.1}draw(){image(this.image,this.x,this.y,this.width,this.height,this.spriteMap.captureX||0,this.spriteMap.captureY||0,this.spriteMap.fillX,this.spriteMap.fillY),this.animate()}animate(){this.spriteMap.captureX=this.spriteMap.frames[this.frame.toFixed()],this.frame>=this.spriteMap.frames.length-1?this.frame=0:this.frame=this.frame+this.animationSpeed}}
class Character extends Animation{constructor(i,t,h,a,e,s){super(i,t,h,a),this.animationSpeed=config.character.animationSpeed,this.isDead=!1,this.isJumping=!1,this.isCrouching=!1,this.upSpeed=0,this.gravity=2,this._yInitial=s-this.height,this.y=this._yInitial,this.x=e,this.yVariation=0}defineYPosition(i){this.y=i-this.height}jump(){if(this.isJumping||this.isDead)return!1;this.upSpeed=-20,this.isJumping=!0,this.changeAnimationImage("jumping"),jumpSound.play()}crouched(){if(this.isJumping||this.isDead)return!1;this.isCrouching?(this.yVariation=0,this.changeAnimationImage("walking")):(this.changeAnimationImage("crouched"),this.yVariation=11),this.isCrouching=!this.isCrouching}applyGravity(){this.y=this.y+this.upSpeed,this.upSpeed=this.upSpeed+this.gravity;const i=this.y>this._yInitial+this.yVariation;i&&(this.y=this._yInitial+this.yVariation);this.isJumping&&i&&(this.isJumping=!1,this.changeAnimationImage("walking"))}dead(){this.upSpeed=-4,this.isDead||(gameOverSound.play(),gameOverSound.stop(3),this.changeAnimationImage("dead"),this.isDead=!0)}changeAnimationImage(i){switch(i){case"jumping":this.image=jumpImage,this.width=config.character.jumping.width,this.height=config.character.jumping.height,this.spriteMap=config.character.jumping.spriteMap;break;case"walking":this.image=walkingImage,this.width=config.character.walking.width,this.height=config.character.walking.height,this.spriteMap=config.character.walking.spriteMap;break;case"dead":this.image=deadImage,this.width=config.character.dead.width,this.height=config.character.dead.height,this.spriteMap=config.character.dead.spriteMap;break;case"crouched":this.image=crouchedImage,this.width=config.character.crouched.width,this.height=config.character.crouched.height,this.spriteMap=config.character.crouched.spriteMap}}_calculateJumpHeight(i,t,h){let a=h,e=i/t;for(let i=0;i<=e;i++)a-=t*i;return a}}
class Enemy extends Animation{constructor(t,s,e,i){super(t,s,e,i)}move(){this.x=this.x-this.xMovementSpeed}isOutOfCanvas(){return this.x<-this.width}}
class Game{constructor(){this.scenario,this.events=[],this.isOver}setup(){this.isCollide=!1;const s=config.stage.one;this.stage=new Stage(s),this.stage.startSound()}draw(){this.stage.draw(this.events,s=>{this.events.length&&(this.events=[]),this.isOver=s}),this.isOver&&this.events.push("dead")}keyPressed(s){this._addEvent(s)}keyReleased(s){"ArrowDown"===s&&this._addEvent(s)}_addEvent(s){this.events.includes(s)||this.events.push(key)}}
class Scenario{constructor(e){this.config=e,this.groundY,this.groundCollection,this.groundX,this._elements,this.elementsSpeed,this.groundSpeed,this.setup()}setup(){this.groundInfo=config.stage.one.ground,this.groundY=config.canvas.height-this.config.ground.height,this.groundCollection=this._buildGround(),this.groundX=0,this.groundSpeed=this.config.ground.speed,this._elements=this.config.elements.collection}elements(){for(let e=0;e<this._elements.length;e++)"tree"===this._elements[e].type&&(this._elements[e].image=singleTreeImage),"cloud"===this._elements[e].type&&(this._elements[e].image=cloudImage),"right"!==this._elements[e].direction?(this._elements[e].initialX=config.canvas.width,this._drawElementRightToLeft(this._elements[e])):(this._elements[e].initialX=0,this._drawElementLeftToRight(this._elements[e]))}ground(){this.groundX=this.groundX-this.groundSpeed,this.groundCollection.forEach(e=>{const t=e+this.groundX;image(stageOneImage,t,this.groundY);this.groundX<-config.canvas.width&&(this.groundX=0)})}_drawElementLeftToRight(e){e.y||(e.y=this.groundY-e.height),image(e.image,e.x,e.y,e.width,e.height),e.x=e.x+this._defineMovementSpeed(e.speed);e.x>config.canvas.width+e.width&&(e.x=e.initialX-e.width)}_drawElementRightToLeft(e){!e.y&&(e.y=this.groundY-e.height),image(e.image,e.x,e.y,e.width,e.height),e.x=e.x-this._defineMovementSpeed(e.speed);e.x<-e.width&&(e.x=e.initialX)}_defineMovementSpeed(e){return 0===this.elementsSpeed?this.elementsSpeed:parseFloat(e)}_buildGround(){let e=0;const t=[];for(;e<2*config.canvas.width;)t.push(e),e+=this.config.ground.width;return t}}
class Stage{constructor(e){this.config=e,this.scenario=new Scenario(this.config.scenario),this.enemies=this.getEnemiesCollection(),this.indexInEnemyCollection=0,this.isCollide=!1,this.characterYInitial=config.canvas.height-this.config.scenario.ground.height,this.character=new Character(walkingImage,config.character.walking.width,config.character.walking.height,config.character.walking.spriteMap,this.config.personageXInitial,this.characterYInitial),this.isGameOver=!1}draw(e,i){if(i(this.isCollide),this.scenario.elements(),this.scenario.ground(),this.character.applyGravity(),this.character.draw(),this.isGameOver)this.character.dead(),this.scenario.groundSpeed=0,this.scenario.elementsSpeed=0;else{e.forEach(e=>{"ArrowUp"===e&&this.character.jump(),"ArrowDown"===e&&this.character.crouched(),"dead"===e&&(this.isGameOver=!0)});const i=this.enemies[this.indexInEnemyCollection];i.draw(),i.move(),this.isCollide=this._checkIfTheyCollide(this.character,i),console.log(i),i.isOutOfCanvas()&&(this.indexInEnemyCollection++,i.x=config.canvas.width,this.indexInEnemyCollection>this.enemies.length-1&&(this.indexInEnemyCollection=0)),console.log(this.indexInEnemyCollection)}}startSound(){mainThemeSound.loop(),mainThemeSound.setVolume(.1)}_checkIfTheyCollide(e,i){return collideRectRect(e.x,e.y,.7*e.width,.7*e.height,i.x,i.y,.7*i.width,.7*i.height)}getEnemiesCollection(){const e=this.config.enemiesMap,i=[];return e.forEach(e=>{i.push(this._buildEnemie(e))}),i}_buildEnemie(e){let i={};switch(e.type){case"ghost":i=new Enemy(ghostImage,config.enemies.ghost.width,config.enemies.ghost.height,config.enemies.ghost.spriteMap);break;case"monsterBird":i=new Enemy(birdImage,config.enemies.monsterBird.width,config.enemies.monsterBird.height,config.enemies.monsterBird.spriteMap)}return i.x=e.x,i.y=e.y,i.xMovementSpeed=e.speed,i}}